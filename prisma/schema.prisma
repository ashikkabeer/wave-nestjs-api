generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        Int        @id @default(autoincrement())
  name      String
  username  String     @unique
  email     String     @unique
  password  String
  collegeId College?
  gender    Gender
  role      Role       @default(USER)
  posts     Post[]
  profile   Profile?
  message   Message[]
  userChat  UserChat[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt()
}

model Profile {
  id     Int    @id @default(autoincrement())
  bio    String
  user   User   @relation(fields: [userId], references: [id])
  userId Int    @unique
}

model College {
  id              Int    @id @default(autoincrement())
  collegeName     String
  location        String
  establishedYear Int
  posts           Post[]

  user   User @relation(fields: [userId], references: [id])
  userId Int  @unique
}

model Post {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  title     String
  published Boolean  @default(false)
  author    User     @relation(fields: [authorId], references: [id])
  authorId  Int
  college   College  @relation(fields: [postId], references: [id])
  postId    Int      @unique
}

model Chat {
  id          Int        @id @default(autoincrement())
  createdAt   DateTime   @default(now())
  title       String
  description String
  mentor      String
  author      String
  semester    Int
  department  String
  subject     String
  message     Message[]
  userChat    UserChat[]
}

model UserChat {
  userId Int
  chatId Int
  user   User @relation(fields: [userId], references: [id])
  chat   Chat @relation(fields: [chatId], references: [id])

  @@id([userId, chatId])
}

model Message {
  id        Int      @id @default(autoincrement())
  chatId    Int
  userId    Int
  content   String
  createdAt DateTime @default(now())
  user      User     @relation(fields: [userId], references: [id])
  chat      Chat     @relation(fields: [chatId], references: [id])
}

enum Role {
  USER
  ADMIN
}

enum Gender {
  MALE
  FEMALE
  OTHER
}
